{"ast":null,"code":"const [userData, setUserData] = useState({\n  email: '',\n  password: ''\n});\nconst [errors, setErrors] = useState({\n  email: '',\n  password: ''\n});\nconst validate = () => {\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: 'Este campo no puede quedar en blanco'\n    });\n  } else if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\n    setErrors({\n      ...errors,\n      email: 'el usuario tiene que ser un email'\n    });\n  } else if (userData.email.length > 35) {\n    setErrors({\n      ...errors,\n      email: 'el usuario no puede tener más de 35 caracteres'\n    });\n  }\n  if (!/^(?=.*[0-9]).{6,10}$/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: 'el password debe contener al menos un número y entre 6 y 10 caracteres'\n    });\n  } else errors.email = '';\n};\nexport default validate;","map":{"version":3,"names":["userData","setUserData","useState","email","password","errors","setErrors","validate","test","length"],"sources":["C:/Users/daniel/Desktop/HENRY COURSE/M2/rick_and_morty/src/validation.js"],"sourcesContent":["const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n})\r\n\r\nconst [errors, setErrors] = useState({\r\n    email:'',\r\n    password: ''\r\n})\r\n\r\nconst validate = () => {\r\n    if(!userData.email){\r\n        setErrors({\r\n            ...errors,\r\n            email: 'Este campo no puede quedar en blanco'\r\n        })\r\n    }else \r\n    if(!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\r\n        setErrors({\r\n            ...errors,\r\n            email: 'el usuario tiene que ser un email'\r\n        })\r\n    }else\r\n    if(userData.email.length > 35){\r\n        setErrors({\r\n            ...errors,\r\n            email: 'el usuario no puede tener más de 35 caracteres'\r\n        })\r\n    }\r\n\r\n    if(!/^(?=.*[0-9]).{6,10}$/.test(userData.password)){\r\n        setErrors({\r\n            ...errors,\r\n            password: 'el password debe contener al menos un número y entre 6 y 10 caracteres'\r\n        })\r\n    }\r\n      else errors.email = '';\r\n}\r\n\r\nexport default validate"],"mappings":"AAAA,MAAM,CAACA,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;EACrCC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACd,CAAC,CAAC;AAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC;EACjCC,KAAK,EAAC,EAAE;EACRC,QAAQ,EAAE;AACd,CAAC,CAAC;AAEF,MAAMG,QAAQ,GAAGA,CAAA,KAAM;EACnB,IAAG,CAACP,QAAQ,CAACG,KAAK,EAAC;IACfG,SAAS,CAAC;MACN,GAAGD,MAAM;MACTF,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC,MACD,IAAG,CAAC,cAAc,CAACK,IAAI,CAACR,QAAQ,CAACG,KAAK,CAAC,EAAE;IACrCG,SAAS,CAAC;MACN,GAAGD,MAAM;MACTF,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC,MACD,IAAGH,QAAQ,CAACG,KAAK,CAACM,MAAM,GAAG,EAAE,EAAC;IAC1BH,SAAS,CAAC;MACN,GAAGD,MAAM;MACTF,KAAK,EAAE;IACX,CAAC,CAAC;EACN;EAEA,IAAG,CAAC,sBAAsB,CAACK,IAAI,CAACR,QAAQ,CAACI,QAAQ,CAAC,EAAC;IAC/CE,SAAS,CAAC;MACN,GAAGD,MAAM;MACTD,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC,MACMC,MAAM,CAACF,KAAK,GAAG,EAAE;AAC5B,CAAC;AAED,eAAeI,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}