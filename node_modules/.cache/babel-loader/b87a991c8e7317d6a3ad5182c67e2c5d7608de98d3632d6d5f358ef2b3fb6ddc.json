{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel\\\\Desktop\\\\HENRY COURSE\\\\M2\\\\rick_and_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [characters, setCharacters] = useState([]);\n  const onSearch = id => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        Salert('¡No hay personajes con este ID!');\n      }\n    });\n    // setCharacters([...characters, example])// spread operator, hace una copia de lo que tiene el [array] y agrega example\n  };\n\n  const onClose = id => {\n    const charactersFiltered = characters.filter(character => character.id !== Number(id));\n    setCharacters(charactersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      characters: characters,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\n\n// const example = {\n//    id: 1,\n//    name: 'Rick Sanchez',\n//    status: 'Alive',\n//    species: 'Human',\n//    gender: 'Male',\n//    origin: {\n//       name: 'Earth (C-137)',\n//       url: 'https://rickandmortyapi.com/api/location/1',\n//    },\n//    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n// };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","id","then","data","name","oldChars","Salert","onClose","charactersFiltered","filter","character","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/daniel/Desktop/HENRY COURSE/M2/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Cards from './components/Cards.jsx';\r\nimport Nav from './components/Nav';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n\r\n   let [characters, setCharacters] = useState([]);\r\n\r\n   const onSearch = (id) => {\r\n      axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\r\n         if (data.name) {\r\n            setCharacters((oldChars) => [...oldChars, data]);\r\n         } else {\r\n            Salert('¡No hay personajes con este ID!');\r\n         }\r\n      });\r\n      // setCharacters([...characters, example])// spread operator, hace una copia de lo que tiene el [array] y agrega example\r\n   }\r\n\r\n   const onClose = (id) => {\r\n      const charactersFiltered = characters.filter(character => character.id !== Number(id))\r\n      setCharacters(charactersFiltered)\r\n   }\r\n\r\n   return (\r\n      <div className='App'>\r\n         <Nav onSearch={onSearch} />\r\n         <Cards characters={characters} onClose={onClose} />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App\r\n\r\n   // const example = {\r\n   //    id: 1,\r\n   //    name: 'Rick Sanchez',\r\n   //    status: 'Alive',\r\n   //    species: 'Human',\r\n   //    gender: 'Male',\r\n   //    origin: {\r\n   //       name: 'Earth (C-137)',\r\n   //       url: 'https://rickandmortyapi.com/api/location/1',\r\n   //    },\r\n   //    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\r\n   // };\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,GAAG,MAAM,kBAAkB;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEZ,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,QAAQ,GAAIC,EAAE,IAAK;IACtBR,KAAK,CAAE,6CAA4CQ,EAAG,EAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACzE,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZL,aAAa,CAAEM,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACJG,MAAM,CAAC,iCAAiC,CAAC;MAC5C;IACH,CAAC,CAAC;IACF;EACH,CAAC;;EAED,MAAMC,OAAO,GAAIN,EAAE,IAAK;IACrB,MAAMO,kBAAkB,GAAGV,UAAU,CAACW,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACT,EAAE,KAAKU,MAAM,CAACV,EAAE,CAAC,CAAC;IACtFF,aAAa,CAACS,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACGb,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACjBlB,OAAA,CAACJ,GAAG;MAACS,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BtB,OAAA,CAACL,KAAK;MAACQ,UAAU,EAAEA,UAAW;MAACS,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEZ;AAACpB,EAAA,CA1BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA4BZ,eAAeA,GAAG;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}